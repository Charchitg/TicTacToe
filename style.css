/*
the hover is very tough concept understand it like that it checks the cindition we are applying
not(.x) not(.circle) due to this the hover effect is not vissible on the occupied cells
*/
/*
also we are separately placing the bg - colour above hover css  so that it does not get overright 
*/
*{
    margin:0;
    padding: 0;
    box-sizing: border-box;
    background-color: crimson;
}

:root{
    --cell-size : 100px;
    --mark-size : calc(var(--cell-size) * .9);
}

.board{
    width: 100%;
    height: 75vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3,auto);
}

.heading{
    width: 100%;
    height: 20vh;
    margin: 0.5rem 0rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    text-transform: uppercase;
}

.cell{
    width: 100px;
    height: 100px;
    border: 2px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}


.cell:first-child , 
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}


.cell:nth-child(3n+1){
    border-left: none;
}

.cell:nth-child(3n+3){
    border-right: none;
}

.cell:last-child , 
.cell:nth-child(8),
.cell:nth-child(7){
    border-bottom: none;
}


.cell.x , 
.cell.circle{
   cursor: not-allowed;
}

.cell.x::before , 
.cell.x::after , 
 .cell.circle::before {
    background-color:black;
}



.board.x .cell:not(.x):not(.circle):hover::before , 
.board.x .cell:not(.x):not(.circle):hover::after  ,
.board.circle .cell:not(.x):not(.circle):hover::before{
    background-color: lightgray;
}


.cell.x::before , 
.cell.x::after , 
.board.x .cell:not(.x):not(.circle):hover::before , 
.board.x .cell:not(.x):not(.circle):hover::after {
    content: "";
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: calc(var(--mark-size));
}

.cell.x::after , 
.board.x .cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45deg);
}

.cell.x::before  ,
.board.x .cell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
}

.cell.circle::before , 
.cell.circle::after ,
.board.circle .cell:not(.x):not(.circle):hover::before , 
.board.circle .cell:not(.x):not(.circle):hover::after {
    content: "";
    position: absolute;
    border-radius: 50%;
}

.cell.circle::before , 
.board.circle .cell:not(.x):not(.circle):hover::before{
    width: calc(var(--mark-size));
    height: calc(var(--mark-size));
}

.cell.circle::after , 
.board.circle .cell:not(.x):not(.circle):hover::after{
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color:crimson;
}

.winning-message{
    display: none;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0,0,0,0.9);
    justify-content: center;
    align-items: center;
    flex-direction: column;
    font-size: 5rem;
    color: white;
}
.wintext{
   background-color: black;
}

.winning-message button{
    background-color: white;
    cursor:pointer;
    padding: 0.25em 0,5em;
    font-size: 3rem;
    border: 1px solid black;
}

.winning-message button:hover{
    background-color: black;
    border-color:white;
    color: white;
}

.winning-message.show{
 display: flex;
}
